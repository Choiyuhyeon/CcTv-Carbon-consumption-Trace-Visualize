{"ast":null,"code":"var _jsxFileName = \"/Users/yuhyeon/Desktop/hyeon/4grade/\\u110C\\u1169\\u11AF\\u110C\\u1161\\u11A8/CcTv/CcTv-Carbon-consumption-Trace-Visualize/web/react-app/src/pages/train2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Train2 = () => {\n  _s();\n  // 더미 데이터\n  const [resource, setResource] = useState({\n    cpu: 60,\n    memory: 8000,\n    total_memory: 16000,\n    gpu: 2,\n    epoch: 10\n  });\n\n  // 서버로부터 데이터를 가져오는 대신 더미 데이터를 사용하겠습니다.\n  useEffect(() => {\n    const fetchData = async () => {\n      // 서버 연결 대신 더미 데이터를 사용합니다.\n      // 실제 서버 연결 시에는 이 부분을 주석 처리하고 서버로부터 데이터를 가져오는 로직을 사용하세요.\n      setResource({\n        cpu: Math.random() * 100,\n        memory: 8000 + Math.random() * 2000,\n        total_memory: 16000,\n        gpu: Math.floor(Math.random() * 8),\n        epoch: Math.floor(Math.random() * 50)\n      });\n    };\n    fetchData();\n    const intervalId = setInterval(fetchData, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const cpuData = {\n    labels: ['Used', 'Unused'],\n    datasets: [{\n      data: [resource.cpu, 100 - resource.cpu],\n      backgroundColor: ['#FF6384', '#36A2EB'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB']\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Main \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Doughnut, {\n        data: cpuData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBA54\\uBAA8\\uB9AC \\uC0AC\\uC6A9\\uB7C9: \", resource.memory.toFixed(2), \" MB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC804\\uCCB4 \\uBA54\\uBAA8\\uB9AC: \", resource.total_memory, \" MB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"GPU \\uC0AC\\uC6A9\\uB7C9: \", resource.gpu]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Epoch: \", resource.epoch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Train2, \"gZoYPEvEzNS5vpIRH/H6UM7oZx0=\");\n_c = Train2;\nexport default Train2;\nvar _c;\n$RefreshReg$(_c, \"Train2\");","map":{"version":3,"names":["React","useState","useEffect","Doughnut","jsxDEV","_jsxDEV","Train2","_s","resource","setResource","cpu","memory","total_memory","gpu","epoch","fetchData","Math","random","floor","intervalId","setInterval","clearInterval","cpuData","labels","datasets","data","backgroundColor","hoverBackgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","$RefreshReg$"],"sources":["/Users/yuhyeon/Desktop/hyeon/4grade/졸작/CcTv/CcTv-Carbon-consumption-Trace-Visualize/web/react-app/src/pages/train2.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst Train2 = () => {\n  // 더미 데이터\n  const [resource, setResource] = useState({\n    cpu: 60,\n    memory: 8000,\n    total_memory: 16000,\n    gpu: 2,\n    epoch: 10\n  });\n\n  // 서버로부터 데이터를 가져오는 대신 더미 데이터를 사용하겠습니다.\n  useEffect(() => {\n    const fetchData = async () => {\n      // 서버 연결 대신 더미 데이터를 사용합니다.\n      // 실제 서버 연결 시에는 이 부분을 주석 처리하고 서버로부터 데이터를 가져오는 로직을 사용하세요.\n      setResource({\n        cpu: Math.random() * 100,\n        memory: 8000 + Math.random() * 2000,\n        total_memory: 16000,\n        gpu: Math.floor(Math.random() * 8),\n        epoch: Math.floor(Math.random() * 50)\n      });\n    };\n\n    fetchData();\n\n    const intervalId = setInterval(fetchData, 1000);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const cpuData = {\n    labels: ['Used', 'Unused'],\n    datasets: [\n      {\n        data: [resource.cpu, 100 - resource.cpu],\n        backgroundColor: ['#FF6384', '#36A2EB'],\n        hoverBackgroundColor: ['#FF6384', '#36A2EB']\n      }\n    ]\n  };\n\n  return (\n    <div>\n      <h1>Main 화면입니다</h1>\n      <div>\n        <Doughnut data={cpuData} />\n        <p>메모리 사용량: {resource.memory.toFixed(2)} MB</p>\n        <p>전체 메모리: {resource.total_memory} MB</p>\n        <p>GPU 사용량: {resource.gpu}</p>\n        <p>Epoch: {resource.epoch}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Train2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}